@using FlexCap.Web.Models
@model List<FlexCap.Web.Models.Colaborador>


@{
    ViewData["Title"] = "Gestão de Colaboradores (RH)";
    Layout = "~/Views/Shared/Template.cshtml";

    var nomeBusca = ViewData["NomeBusca"] as string;
    var statusBusca = ViewData["StatusBusca"] as string;
    var countryBusca = ViewData["CountryBusca"] as string;
    var sectorBusca = ViewData["SectorBusca"] as string;
    var teamBusca = ViewData["TeamBusca"] as string;
}

@if (TempData["CadastroSucesso"] != null && (bool)TempData["CadastroSucesso"]!)
{
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title fw-bold" id="successModalLabel">✅ Registration Successful!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @* Uses data saved in TempData *@
                    <p>The profile for the new employee **@TempData["NovoColaboradorNome"]** has been created. Use the credentials below for initial access:</p>

                    <div class="p-3 bg-light border rounded">
                        <h6 class="text-muted small mb-1">Access Email:</h6>
                        <p class="fw-bold" id="modal-email">@TempData["NovoColaboradorEmail"]</p>

                        <h6 class="text-muted small mb-1">Temporary Password:</h6>
                        <p class="fw-bold text-danger" id="modal-senha">@TempData["NovoColaboradorSenha"]</p>

                        <small class="text-muted d-block mt-2">We recommend the employee changes this password upon first login.</small>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="copyCredentialsBtn" class="btn btn-primary">Copy Credentials</button>
                </div>
            </div>
        </div>
    </div>
}
<div class="py-4 w-100">

    <h3 class="fw-bold mb-3">Colaboradores</h3>

    <form asp-controller="Colaboradores" asp-action="BuscarColaboradores" method="get">
        <div class="row g-2 mb-4 d-flex align-items-end">

            <div class="col-md-2">
                <label for="search-name" class="form-label small mb-0">Name</label>
                <input type="text" id="search-name" name="nomeBusca" value="@nomeBusca" class="form-control form-control-sm" placeholder="Search name">
            </div>

            <div class="col-md-2">
                <label for="status" class="form-label small mb-0">Status</label>
                <select id="status" name="statusBusca" class="form-select form-select-sm">
                    <option value="" selected="@(string.IsNullOrEmpty(statusBusca))">All</option>
                    <option value="Ativo" selected="@("Ativo" == statusBusca)">Active</option>
                    <option value="Inativo" selected="@("Inativo" == statusBusca)">Inactive</option>
                </select>
            </div>

            <div class="col-md-2">
                <label for="country" class="form-label small mb-0">Country</label>
                <select id="country" name="countryBusca" class="form-select form-select-sm">
                    <option value="" selected="@(string.IsNullOrEmpty(countryBusca))">Select country</option>
                    <option value="Brazil" selected="@("Brazil" == countryBusca)">Brazil</option>
                    <option value="United States" selected="@("United States" == countryBusca)">United States</option>
                    <option value="Japan" selected="@("Japan" == countryBusca)">Japan</option>
                    <option value="Italy" selected="@("Italy" == countryBusca)">Italy</option>
                    <option value="Canada" selected="@("Canada" == countryBusca)">Canada</option>
                </select>
            </div>

            <div class="col-md-2">
                <label for="sector" class="form-label small mb-0">Sector</label>
                <select id="sector" name="sectorBusca" class="form-select form-select-sm">
                    <option value="" selected="@(string.IsNullOrEmpty(sectorBusca))">Select Sector</option>
                    <option value="Benefits" selected="@("Benefits" == sectorBusca)">Benefits</option>
                    <option value="Mobility" selected="@("Mobility" == sectorBusca)">Mobility</option>
                    <option value="Corporate Payments" selected="@("Corporate Payments" == sectorBusca)">Corporate Payments</option>
                </select>
            </div>

            <div class="col-md-2">
                <label for="team" class="form-label small mb-0">Team</label>
                <select id="team" name="teamBusca" class="form-select form-select-sm">
                    <option value="" selected="@(string.IsNullOrEmpty(teamBusca))">Select Team</option>
                    <option value="Titans" selected="@("Titans" == teamBusca)">Titans</option>
                    <option value="Code Warriors" selected="@("Code Warriors" == teamBusca)">Code Warriors</option>
                    <option value="Bug Busters" selected="@("Bug Busters" == teamBusca)">Bug Busters</option>
                    <option value="Pixel Pioneers" selected="@("Pixel Pioneers" == teamBusca)">Pixel Pioneers</option>
                    <option value="Cloud Crusaders" selected="@("Cloud Crusaders" == teamBusca)">Cloud Crusaders</option>
                    <option value="Dev Dynamos" selected="@("Dev Dynamos" == teamBusca)">Dev Dynamos</option>
                </select>
            </div>

            <div class="col-auto">
                <button type="submit" class="btn btn-dark btn-sm" style="margin-top: 20px;">
                    <span class="material-icons" style="font-size: 18px;">search</span>
                </button>
            </div>
        </div>
    </form>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="text-muted mb-0">@Model.Count colaboradores encontrados</p>

        <a asp-controller="Registro" asp-action="NovoColaborador" class="btn btn-primary">
            + Register New Employee
        </a>
    </div>

    <div class="table-responsive" style="max-height: 280px; overflow-y: auto;">
        <table class="table align-middle table-sm">
            <thead class="table-light">
                <tr class="sticky-top">
                    <th>Photo</th>
                    <th>Name</th>
                    <th>Position</th>
                    <th>Country</th>
                    <th>Current Status</th>
                    <th>Sector</th>
                    <th>Team</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var colaborador in Model)
                    {
                        <tr>
                            <td>
                                <div class="photo-container">
                                    <img src="@colaborador.PhotoUrl"
                                         class="rounded-circle"
                                         width="30" height="30"
                                         alt="Foto do Colaborador">

                                    @if (colaborador.IsManager)
                                    {
                                        <span class="manager-crown">
                                            &#x1F451;
                                        </span>
                                    }
                                </div>
                            </td>
                            <td><strong>@colaborador.FullName</strong></td>
                            <td>@colaborador.Position</td>
                            <td>@colaborador.Country</td>
                            <td>@colaborador.Status</td>
                            <td>@colaborador.Department</td>
                            <td>@colaborador.TeamName</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        @section Scripts {
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Checks if the modal was rendered (indicating the registration was done successfully)
                    const modalElement = document.getElementById('successModal');

                    if (modalElement) {
                        // 1. Display the modal
                        // Ensure Bootstrap JS is loaded
                        const successModal = new bootstrap.Modal(modalElement);
                        successModal.show();

                        // 2. Logic for the 'Copy Credentials' button
                        const copyBtn = document.getElementById('copyCredentialsBtn');
                        if (copyBtn) {
                            copyBtn.addEventListener('click', function() {
                                const email = document.getElementById('modal-email').textContent.trim();
                                const senha = document.getElementById('modal-senha').textContent.trim();

                                // Format the text for the clipboard
                                const textToCopy = `FlexCap Access:\nEmail: ${email}\nPassword: ${senha}`;

                                navigator.clipboard.writeText(textToCopy).then(() => {
                                    copyBtn.textContent = 'Copied!';
                                    copyBtn.classList.remove('btn-primary'); // Remove original color
                                    copyBtn.classList.add('btn-success'); // Change to success color

                                    setTimeout(() => {
                                        copyBtn.textContent = 'Copy Credentials';
                                        copyBtn.classList.remove('btn-success');
                                        copyBtn.classList.add('btn-primary'); // Revert to primary color
                                    }, 2000);
                                }).catch(err => {
                                    console.error('Failed to copy:', err);
                                    alert('Failed to copy. Please try copying manually.');
                                });
                            });
                        }
                    }
                });
            </script>
            @{
                await Html.RenderPartialAsync("_ValidationScriptsPartial");
            }
        }
    </div>
</div>